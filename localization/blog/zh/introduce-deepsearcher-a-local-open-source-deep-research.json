{"codeList":["Break down the original query into new sub queries: [\n  'How has the cultural impact and societal relevance of The Simpsons evolved from its debut to the present?',\n  'What changes in character development, humor, and storytelling styles have occurred across different seasons of The Simpsons?', \n  'How has the animation style and production technology of The Simpsons changed over time?',\n  'How have audience demographics, reception, and ratings of The Simpsons shifted throughout its run?']\n","def get_vector_db_search_prompt(\n    question: str,\n    collection_names: List[str],\n    collection_descriptions: List[str],\n    context: List[str] = None,\n):\n    sections = []\n    # common prompt\n    common_prompt = f\"\"\"You are an advanced AI problem analyst. Use your reasoning ability and historical conversation information, based on all the existing data sets, to get absolutely accurate answers to the following questions, and generate a suitable question for each data set according to the data set description that may be related to the question.\n\nQuestion: {question}\n\"\"\"\n    sections.append(common_prompt)\n    \n    # data set prompt\n    data_set = []\n    for i, collection_name in enumerate(collection_names):\n        data_set.append(f\"{collection_name}: {collection_descriptions[i]}\")\n    data_set_prompt = f\"\"\"The following is all the data set information. The format of data set information is data set name: data set description.\n\nData Sets And Descriptions:\n\"\"\"\n    sections.append(data_set_prompt + \"\\n\".join(data_set))\n    \n    # context prompt\n    if context:\n        context_prompt = f\"\"\"The following is a condensed version of the historical conversation. This information needs to be combined in this analysis to generate questions that are closer to the answer. You must not generate the same or similar questions for the same data set, nor can you regenerate questions for data sets that have been determined to be unrelated.\n\nHistorical Conversation:\n\"\"\"\n        sections.append(context_prompt + \"\\n\".join(context))\n    \n    # response prompt\n    response_prompt = f\"\"\"Based on the above, you can only select a few datasets from the following dataset list to generate appropriate related questions for the selected datasets in order to solve the above problems. The output format is json, where the key is the name of the dataset and the value is the corresponding generated question.\n\nData Sets:\n\"\"\"\n    sections.append(response_prompt + \"\\n\".join(collection_names))\n    \n    footer = \"\"\"Respond exclusively in valid JSON format matching exact JSON schema.\n\nCritical Requirements:\n- Include ONLY ONE action type\n- Never add unsupported keys\n- Exclude all non-JSON text, markdown, or explanations\n- Maintain strict JSON syntax\"\"\"\n    sections.append(footer)\n    return \"\\n\\n\".join(sections)\n","def get_reflect_prompt(\n   question: str,\n   mini_questions: List[str],\n   mini_chuncks: List[str],\n):\n    mini_chunk_str = \"\"\n    for i, chunk in enumerate(mini_chuncks):\n        mini_chunk_str += f\"\"\"<chunk_{i}>\\n{chunk}\\n</chunk_{i}>\\n\"\"\"\n    reflect_prompt = f\"\"\"Determine whether additional search queries are needed based on the original query, previous sub queries, and all retrieved document chunks. If further research is required, provide a Python list of up to 3 search queries. If no further research is required, return an empty list.\n\nIf the original query is to write a report, then you prefer to generate some further queries, instead return an empty list.\n\n    Original Query: {question}\n    Previous Sub Queries: {mini_questions}\n    Related Chunks: \n    {mini_chunk_str}\n    \"\"\"\n   \n    \n    footer = \"\"\"Respond exclusively in valid List of str format without any other text.\"\"\"\n    return reflect_prompt + footer\n","New search queries for next iteration: [\n  \"How have changes in The Simpsons' voice cast and production team influenced the show's evolution over different seasons?\",\n  \"What role has The Simpsons' satire and social commentary played in its adaptation to contemporary issues across decades?\",\n  'How has The Simpsons addressed and incorporated shifts in media consumption, such as streaming services, into its distribution and content strategies?']\n","def get_final_answer_prompt(\n   question: str, \n   mini_questions: List[str],\n   mini_chuncks: List[str],\n):\n    mini_chunk_str = \"\"\n    for i, chunk in enumerate(mini_chuncks):\n        mini_chunk_str += f\"\"\"<chunk_{i}>\\n{chunk}\\n</chunk_{i}>\\n\"\"\"\n    summary_prompt = f\"\"\"You are an AI content analysis expert, good at summarizing content. Please summarize a specific and detailed answer or report based on the previous queries and the retrieved document chunks.\n\n    Original Query: {question}\n    Previous Sub Queries: {mini_questions}\n    Related Chunks: \n    {mini_chunk_str}\n    \"\"\"\n    return summary_prompt\n","Report: The Evolution of The Simpsons (1989–Present)\n1. Cultural Impact and Societal Relevance\nThe Simpsons debuted as a subversive critique of American middle-class life, gaining notoriety for its bold satire in the 1990s. Initially a countercultural phenomenon, it challenged norms with episodes tackling religion, politics, and consumerism. Over time, its cultural dominance waned as competitors like South Park and Family Guy pushed boundaries further. By the 2010s, the show transitioned from trendsetter to nostalgic institution, balancing legacy appeal with attempts to address modern issues like climate change and LGBTQ+ rights, albeit with less societal resonance.\n…\nConclusion\nThe Simpsons evolved from a radical satire to a television institution, navigating shifts in technology, politics, and audience expectations. While its golden-age brilliance remains unmatched, its adaptability—through streaming, updated humor, and global outreach—secures its place as a cultural touchstone. The show’s longevity reflects both nostalgia and a pragmatic embrace of change, even as it grapples with the challenges of relevance in a fragmented media landscape.\n"],"headingContent":"","anchorList":[{"label":"DeepSearcher Architecture","href":"DeepSearcher-Architecture","type":2,"isActive":false},{"label":"Results","href":"Results","type":2,"isActive":false},{"label":"Discussion","href":"Discussion","type":2,"isActive":false},{"label":"Resources","href":"Resources","type":2,"isActive":false}]}