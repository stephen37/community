{"codeList":["INFO     [src.agent.custom_agent] üß† New Memory: 1. The post by LangChainAI discusses the 'GraphRAG Agent' which uses Neo4j and Milvus vector search to enhance RAG systems.\n2. Replies include praise for the use of Milvus in intelligent retrieval and vector search.\n3. Specific mention of Milvus as a key component in innovative RAG systems.\n4. No content related to birds or photography was found.\nINFO     [src.agent.custom_agent] ‚è≥ Task Progress:\n1. Navigated to the post URL. 2. Extracted relevant post content. 3. Analyzed the content for relevance to Milvus, the Vector DB.\nINFO     [src.agent.custom_agent] üìã Future Plans:\n1. Summarize the findings and confirm the relevance to Milvus. 2. Complete the task by providing a clear and concise report.\nINFO     [src.agent.custom_agent] ü§î Thought: The task required analyzing the post content for relevance to Milvus, the Vector DB, ignoring any content about birds or photography. The extracted content is entirely relevant to Milvus and its applications in vector search and RAG systems. I will now summarize the findings and complete the task.\nINFO     [src.agent.custom_agent] üéØ Summary: The post and its replies are relevant to Milvus, the Vector DB, focusing on its use in intelligent retrieval and vector search. No content about birds or photography was found.\nINFO     [src.agent.custom_agent] üõ†Ô∏è  Action 1/1: {\"done\":{\"text\":\"The post by LangChainAI discusses the 'GraphRAG Agent,' which uses Neo4j and Milvus vector search to enhance RAG systems. Replies highlight the innovative use of Milvus for intelligent retrieval and vector search, with no mention of birds or photography. The content is entirely relevant to Milvus, the Vector DB.\"}}\nINFO     [src.agent.custom_agent] üß† All Memory:\n1. The post by LangChainAI discusses the 'GraphRAG Agent' which uses Neo4j and Milvus vector search to enhance RAG systems.\n2. Replies focus on the innovative use of Milvus for intelligent retrieval and vector search alongside other technologies.\n3. No posts or replies are related to birds or photography.\n1. The post by LangChainAI discusses the 'GraphRAG Agent' which uses Neo4j and Milvus vector search to enhance RAG systems.\n2. Replies include praise for the use of Milvus in intelligent retrieval and vector search.\n3. Specific mention of Milvus as a key component in innovative RAG systems.\n4. No content related to birds or photography was found.\n","INFO     [src.agent.custom_agent] üß† New Memory: The post and comments primarily discuss photography and birds. No references to Milvus the Vector Database are found.\nINFO     [src.agent.custom_agent] ‚è≥ Task Progress:\nNavigated to the post. Analyzed the content for relevance to Milvus, the Vector DB. No relevant information found.\nINFO     [src.agent.custom_agent] ü§î Thought: The content of the post and comments only discusses birds and photography. Since the task specifies ignoring such topics, there is no relevant information for Milvus, the Vector DB. The task can now be concluded.\nINFO     [src.agent.custom_agent] üéØ Summary: The post does not contain relevant information for Milvus, the Vector DB. I will conclude the task.\nINFO     [src.agent.custom_agent] üõ†Ô∏è  Action 1/1: {\"done\":{\"text\":\"The post and comments focus on birds and photography. No relevant information related to Milvus, the Vector DB, was found.\"}}\nINFO     [src.agent.custom_agent] üß† All Memory:\nThe post and comments primarily discuss photography and birds. No references to Milvus the Vector Database are found.\n","from pymilvus import MilvusClient\n\n# Connect to Milvus\nclient = MilvusClient(uri=\"http://localhost:19530\")\n\n# Create a Schema that handles Dynamic Fields\nschema = self.client.create_schema(enable_dynamic_field=True)\nschema.add_field(field_name=\"id\", datatype=DataType.INT64, is_primary=True, auto_id=True)\nschema.add_field(field_name=\"text\", datatype=DataType.VARCHAR, max_length=65535, enable_analyzer=True)\nschema.add_field(field_name=\"vector\", datatype=DataType.FLOAT_VECTOR, dim=384)\nschema.add_field(field_name=\"sparse\", datatype=DataType.SPARSE_FLOAT_VECTOR)\n","# Prepare data with dynamic fields\ndata = {\n    'text': content_str,\n    'vector': embedding,\n    'url': url,\n    'type': content_type,\n    'metadata': json.dumps(metadata or {})\n}\n\n# Insert into Milvus\nself.client.insert(\n    collection_name=self.collection_name,\n    data=[data]\n)\n"],"headingContent":"","anchorList":[{"label":"The tech stack","href":"The-tech-stack","type":2,"isActive":false},{"label":"Seeing it in action","href":"Seeing-it-in-action","type":2,"isActive":false},{"label":"Storing Data in Milvus","href":"Storing-Data-in-Milvus","type":2,"isActive":false},{"label":"Conclusion","href":"Conclusion","type":2,"isActive":false},{"label":"We‚Äôd Love to Hear What You Think!","href":"Wed-Love-to-Hear-What-You-Think","type":2,"isActive":false}]}